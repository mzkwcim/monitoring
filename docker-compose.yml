version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: my-nginx-static-site
    ports:
      - "80:80"       # Twoja statyczna strona
      - "8080:8080"   # Grafana przez Nginxa (proxy)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html:ro
    restart: always
    depends_on:
      - grafana  # Nginx jako reverse proxy potrzebuje Grafany

  prometheus:
    image: prom/prometheus:latest
    container_name: my-prometheus
    ports:
      - "9090:9090"  # UI Prometheusa
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always

  node_exporter:
    image: prom/node-exporter:latest
    container_name: my-node-exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/hostfs'
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /:/hostfs:ro,rslave
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: my-grafana
    ports:
      - "3000:3000"  # Domyślny port UI Grafany (opcjonalnie może być schowany za Nginxem)
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Zmień to w środowisku produkcyjnym!
    restart: always
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
